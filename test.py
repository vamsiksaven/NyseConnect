# -*- coding: utf-8 -*-
source(findFile("scripts", "Menu_Utilities_SymbolLookup.py"))
source(findFile("scripts", "Menu_Utilities_IndexConstituents.py"))
source(findFile("scripts", "Menu_Utilities_SectorOrIndustryList_Energy.py"))
source(findFile("scripts", "Menu_Utilities_VwapCalculator.py"))
source(findFile("scripts", "Menu_Utilities_Notifications.py"))
source(findFile("scripts", "Menu_Utilities_ReplceSymbols.py"))
source(findFile("scripts", "Menu_Utilities_ViewAlerts.py"))
source(findFile("scripts", "Menu_Utilities_ViewTriggeredAlerts.py"))
source(findFile("scripts", "Menu_Utilities_SectorOrIndustryList_Materials.py"))
source(findFile("scripts", "Menu_Utilities_SectorOrIndustryList_Industrials.py"))
source(findFile("scripts", "Menu_Utilities_SectorOrIndustryList_ConsumerDiscretionary.py"))
source(findFile("scripts", "Menu_Utilities_SectorOrIndustryList_ConsumerStaples.py"))
source(findFile("scripts", "Menu_Utilities_SectorOrIndustryList_HealthCare.py"))
source(findFile("scripts", "Menu_Utilities_SectorOrIndustryList_Financials.py"))
source(findFile("scripts", "Menu_Utilities_SectorOrIndustryList_InformationTechnology.py"))
source(findFile("scripts", "TimeAndSales_SymbolBox.py"))
source(findFile("scripts", "TimeAndSales_Filter.py"))
#source(findFile("scripts", "TimeAndSales_FilterButton.py"))
source(findFile("scripts", "TimeAndSales_FilterOptionFields_Trades.py"))
source(findFile("scripts", "TimeAndSales_BidsAndAsks.py"))
source(findFile("scripts", "TimeAndSalesSymbolDetailsFields.py"))
source(findFile("scripts", "TimeAndSales_DisplayProperties.py"))
source(findFile("scripts", "Customize.py"))
source(findFile("scripts", "TimeAndSales_Fields_RightClick_Charts.py"))
source(findFile("scripts", "News_Filter.py"))
source(findFile("scripts", "News_DisplayProperties.py"))
source(findFile("scripts", "Hotlist_Filter.py"))
source(findFile("scripts", "Hotlist_RightClick_IndexConstituents.py"))
source(findFile("scripts", "Waterfall_Filter.py"))
source(findFile("scripts", "WaterFall_SectorAndIndustryDropDown.py"))
source(findFile("scripts", "WaterFall_DisplayProperties.py"))
source(findFile("scripts", "Marktdepth_SymbolBox.py"))
source(findFile("scripts", "MarketDepth_Displayproperties.py"))
source(findFile("scripts", "Webfeeds.py"))
source(findFile("scripts", "Create_WebFeed.py"))
source(findFile("scripts", "DividendHistory.py"))
source(findFile("scripts", "Whatsnew.py"))
# source(findFile("scripts", "Grid.py"))
source(findFile("scripts", "Short_interest.py"))
source(findFile("scripts", "N_Amer_Market_Rates.py"))
source(findFile("scripts", "News_Plus_Global.py"))
source(findFile("scripts", "Market_Rates.py"))
source(findFile("scripts", "Option_Works.py"))
source(findFile("scripts", "Market_Rates.py"))
source(findFile("scripts", "Ownership.py"))
source(findFile("scripts", "Option_Source.py"))
source(findFile("scripts", "Research.py"))
source(findFile("scripts", "Menu_Bar.py"))
source(findFile("scripts", "Research_Center.py"))
source(findFile("scripts", "SP_Research.py"))
source(findFile("scripts", "SP_Research_Stock_Quickview.py"))
source(findFile("scripts", "US_Markets_Rates.py"))
source(findFile("scripts", "Weather.py"))
source(findFile("scripts", "Notes.py"))
source(findFile("scripts", "Fixed_Page.py"))
source(findFile("scripts", "Fundamentals.py"))
source(findFile("scripts", "Forex.py"))
source(findFile("scripts", "Watchlist.py"))
source(findFile("scripts", "Alerts.py"))
source(findFile("scripts", "Menu_QA.py"))
source(findFile("scripts", "QuotesGrid.py"))
source(findFile("scripts", "Grid.py"))
source(findFile("scripts", "Spreadmatrix.py"))
source(findFile("scripts", "DetailedQuotes.py"))
source(findFile("scripts", "Weather.py"))
source(findFile("scripts", "PortfolioAnalysis.py"))
source(findFile("scripts", "Transcripts.py"))


def main():
    startApplication("C:\\Users\\automation\\Desktop\\Nyse_Connect\\ICEWS.bat")
    #startApplication("javaws C:\\Users\\vamsikrishnak\\Downloads\\mq20190625.jnlp")
    snooze(50)
    waitFor("object.exists(':_ICELogoLabel')", 20000)
    test.passes("Application opened successfully")
     
    #Transcripts()
    #PortfolioAnalysis()
    #Weather()
    #DetailedQuotes()
    #Spreadmatrix()
    #Fundamentals()
    #Grid()
    #QuotesGrid()
    Alerts()
    #Notes()
    #Forex()
    #Watchlist()
    #Fixed_Page()    






    
    
